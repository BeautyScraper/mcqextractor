MC	Which of the following will result in an error?<br>		>>> p = re.compile("d")	incorrect	>>> p.search("door")	incorrect	>>> p = re.escape('hello')	correct	>>> p = re.subn()	incorrect	>>> p = re.purge()	incorrect
MC	What is the output of the line of code shown below?<br><pre><code data-language="C">re.split('\W+', 'Hello, hello, hello.')<br></code></pre>		['Hello', 'hello', 'hello.']	incorrect	['Hello, 'hello', 'hello']	incorrect	['Hello', 'hello', 'hello', '.']	incorrect	['Hello', 'hello', 'hello', "]	correct
MC	What is the output of the following function?<br><pre><code data-language="C">re.findall("hello world", "hello", 1)<br></code></pre>		["hello"]	incorrect	[	]	correct	hello	incorrect	hello world	incorrect
MC	Choose the function whose output can be: <_sre.SRE_Match object; span=(4, 8), match='aaaa'>.<br>		>>> re.search('aaaa', "alohaaaa", 0)	correct	>>> re.match('aaaa', "alohaaaa", 0)	incorrect	>>> re.match('aaa', "alohaaa", 0)	incorrect	>>> re.search('aaa', "alohaaa", 0)	incorrect
MC	Which of the following functions clears the regular expression cache?<br>		re.sub()	incorrect	re.pos()	incorrect	re.purge()	correct	re.subn()	incorrect
MC	What is the output of the code shown?<br><pre><code data-language="C">import re<br>re.ASCII<br></code></pre>		8	incorrect	32	incorrect	64	incorrect	256	correct
MC	Which of the following functions results in case insensitive matching?<br>		re.A	incorrect	re.U	incorrect	re.I	correct	re.X	incorrect
MC	What is the current syntax of remove() a file?<br>		remove(file_name)	correct	remove(new_file_name, current_file_name,)	incorrect	remove(() , file_name))	incorrect	none of the mentioned	incorrect
MC	What is the output of this program?<br><pre><code data-language="C">fo = open("foo.txt", "rw+")<br>print "Name of the file: ", fo.name<br> <br># Assuming file has following 5 lines<br># This is 1st line<br># This is 2nd line<br># This is 3rd line<br># This is 4th line<br># This is 5th line<br> <br>for index in range(5):<br>   line = fo.next()<br>   print "Line No %d - %s" % (index, line)<br> <br># Close opened file<br>fo.close()<br></code></pre>		Compilation Error	incorrect	Syntax Error	incorrect	Displays  Output	correct	None of the mentioned	incorrect
MC	What is the use of seek() method in files?<br>		sets the file's current position at the offset	correct	sets the file's previous position at the offset	incorrect	sets the file's current position within the file	incorrect	none of the mentioned	incorrect
MC	What is the use of truncate() method in file?<br>		truncates the file size	correct	deletes the content of the file	incorrect	deletes the file size	incorrect	none of the mentioned	incorrect
MC	Which is/are the basic I/O connections in file?<br>		Standard Input	incorrect	Standard Output	incorrect	Standard Errors	incorrect	All of the mentioned	correct
MC	What is the output of this program If entered name is<br><pre><code data-language="C">import sys<br>print 'Enter your name: ',<br>name = ''<br>while True:<br>   c = sys.stdin.read(1)<br>   if c == '\n':<br>      break<br>   name = name + c<br> <br>print 'Your name is:', name<br></code></pre>		Compscibits ?	correct	Compscibits	incorrect	Compscibits, Compscibits	incorrect	Comp	incorrect	None of the mentioned	incorrect
MC	What is the output of this program?<br><pre><code data-language="C">import sys<br>sys.stdout.write(' Hello\n')<br>sys.stdout.write('Python\n')<br></code></pre>		Compilation Error	incorrect	Runtime Error	incorrect	Hello Python	incorrect	Hello	correct	Python	incorrect	Hello	incorrect
MC	Which of the following mode will refer to binary data?<br>		r	incorrect	w	incorrect	+	incorrect	b	correct
MC	What is the pickling?<br>		It is used for object serialization	correct	It is used for object deserialization	incorrect	None of the mentioned	incorrect	All of the mentioned	incorrect
MC	What is unpickling?<br>		It is used for object serialization	incorrect	It is used for object deserialization	correct	None of the mentioned	incorrect	All of the mentioned	incorrect
MC	Which module in Python supports regular expressions?<br>		re	correct	regex	incorrect	pyregex	incorrect	none of the mentioned	incorrect
MC	Which of the following creates a pattern object?<br>		re.create(str)	incorrect	re.regex(str)	incorrect	re.compile(str)	correct	re.assemble(str)	incorrect
MC	What does the function re.match do?<br>		matches a pattern at the start of the string	correct	matches a pattern at any position in the string	incorrect	such a function does not exist	incorrect	none of the mentioned	incorrect
MC	What does the function re.search do?<br>		matches a pattern at the start of the string	incorrect	matches a pattern at any position in the string	correct	such a function does not exist	incorrect	none of the mentioned	incorrect
MC	What is the output of the following?<br><pre><code data-language="C">sentence = 'we are humans'<br>matched = re.match(r'(.*) (.*?) (.*)', sentence)<br>print(matched.groups())<br></code></pre>		('we', 'are', 'humans')	correct	(we, are, humans)	incorrect	('we', 'humans')	incorrect	'we are humans'	incorrect
MC	What is the output of the following?<br><pre><code data-language="C">sentence = 'we are humans'<br>matched = re.match(r'(.*) (.*?) (.*)', sentence)<br>print(matched.group())<br></code></pre>		('we', 'are', 'humans')	incorrect	(we, are, humans)	incorrect	('we', 'humans')	incorrect	'we are humans'	correct
MC	What is the output of the following?<br><pre><code data-language="C">sentence = 'we are humans'<br>matched = re.match(r'(.*) (.*?) (.*)', sentence)<br>print(matched.group(2))<br></code></pre>		'are'	incorrect	'we'	incorrect	'humans'	correct	'we are humans'	incorrect
MC	What is the output of the following?<br><pre><code data-language="C">sentence = 'horses are fast'<br>regex = re.compile('(?P&lt;animal&gt;\w+) (?P&lt;verb&gt;\w+) (?P&lt;adjective&gt;\w+)')<br>matched = re.search(regex, sentence)<br>print(matched.groupdict())<br></code></pre>		{'animal': 'horses', 'verb': 'are', 'adjective': 'fast'}	correct	('horses', 'are', 'fast')	incorrect	'horses are fast'	incorrect	'are'	incorrect
MC	What is the output of the following?<br><pre><code data-language="C">sentence = 'horses are fast'<br>regex = re.compile('(?P&lt;animal&gt;\w+) (?P&lt;verb&gt;\w+) (?P&lt;adjective&gt;\w+)')<br>matched = re.search(regex, sentence)<br>print(matched.groups())<br></code></pre>		{'animal': 'horses', 'verb': 'are', 'adjective': 'fast'}	incorrect	('horses', 'are', 'fast')	correct	'horses are fast'	incorrect	'are'	incorrect
MC	What is the output of the following?<br><pre><code data-language="C">sentence = 'horses are fast'<br>regex = re.compile('(?P&lt;animal&gt;\w+) (?P&lt;verb&gt;\w+) (?P&lt;adjective&gt;\w+)')<br>matched = re.search(regex, sentence)<br>print(matched.group(2))<br></code></pre>		{'animal': 'horses', 'verb': 'are', 'adjective': 'fast'}	incorrect	('horses', 'are', 'fast')	incorrect	'horses are fast'	incorrect	'are'	correct
MC	The output of the snippet of code shown below is:<br><pre><code data-language="C">re.split(r'(n\d)=', 'n1=3.1, n2=5, n3=4.565')<br></code></pre>		Error	incorrect	[", 'n1', '3.1, ', 'n2', '5, ', 'n3', '4.565']	correct	['n1', '3.1, ', 'n2', '5, ', 'n3', '4.565']	incorrect	['3.1, ', '5, ', '4.565']	incorrect
MC	The function of re.search is:<br>		Matches a pattern at the start of the string	incorrect	Matches a pattern at the end of the string	incorrect	Matches a pattern from any part of a string	correct	Such a function does not exist	incorrect
MC	Which of the following functions creates a Python object?<br>		re.compile(str)	correct	re.assemble(str)	incorrect	re.regex(str)	incorrect	re.create(str)	incorrect
MC	Which of the following pattern matching modifiers permits whitespace and comments inside the regular expression:<br>		re.L	incorrect	re.S	incorrect	re.U	incorrect	re.X	correct
MC	What is the output of the code shown below?<br><pre><code data-language="C">s = 'welcome home'<br>m = re.match(r'(.*)(.*?)', s)<br>print(m.group())<br></code></pre>		('welcome', 'home')	incorrect	['welcome', 'home']	incorrect	welcome home	correct	['welcome' // 'home'	]	incorrect
MC	The function of re.match is:<br>		Error	incorrect	Matches a pattern anywhere in the string	incorrect	Matches a pattern at the end of the string	incorrect	Matches a pattern at the start of the string	correct
MC	The special character \B matches the empty string, but only when it is:<br>		at the beginning or end of a word	incorrect	not at the beginning or end of a word	correct	at the beginning of the word	incorrect	at the end of the word	incorrect
MC	The output of the code shown below is:<br><pre><code data-language="C">import re<br>s = "A new day"<br>m = re.match(r'(.*)(.*?)', s)<br>print(m.group(2))<br> <br>print(m.group(0))<br></code></pre>		No output	correct	A new day	incorrect	No output	incorrect	No output	incorrect	['A', 'new', 'day']	incorrect	('A', 'new', 'day')	incorrect	Error	incorrect	['A', 'new', 'day']	incorrect	No output	incorrect
MC	Which of the following special characters matches a pattern only at the end of the string?<br>		\B	incorrect	\X	incorrect	\Z	correct	\A	incorrect
MC	The output of the two codes shown below is the same. State whether true or false.<br><pre><code data-language="C">p = re.compile('hello')<br>r = p.match('hello everyone')<br>print(r.group(0))<br> <br>r = re.match('hello', 'hello everyone')<br>print(r.group(0))<br></code></pre>		True	correct	False	incorrect	May be	incorrect	Can't say	incorrect
MC	How do you rename a file?<br>		fp.name = 'new_name.txt'	incorrect	os.rename(existing_name, new_name)	correct	os.rename(fp, new_name)	incorrect	os.set_name(existing_name, new_name)	incorrect
MC	How do you delete a file?<br>		del(fp)	incorrect	fp.delete()	incorrect	os.remove('file')	correct	os.delete('file')	incorrect
MC	How do you change the file position to an offset value from the start?<br>		fp.seek(offset, 0)	correct	fp.seek(offset, 1)	incorrect	fp.seek(offset, 2)	incorrect	none of the mentioned	incorrect
MC	What happens if no arguments are passed to the seek function?<br>		file position is set to the start of file	incorrect	file position is set to the end of file	incorrect	file position remains unchanged	incorrect	error	correct
MC	Which of the  following statements are true ?<br>		When you open a file for reading, if the file does not exist, an error occurs	incorrect	When you open a file for writing, if the file does not exist, a new file is created	incorrect	When you open a file for writing, if the file exists, the existing file is overwritten with the new file	incorrect	All of the mentioned	correct
MC	What is the output of the code shown?<br><pre><code data-language="C">re.match('sp(.*)am', 'spam')</code></pre>		<_sre.SRE_Match object; span=(1, 4), match='spam'>	incorrect	<_sre.SRE_Match object; span=(0, 4), match='spam'>	correct	No output	incorrect	Error	incorrect
MC	Which of the following special characters represents a comment (that is, the contents of the parenthesis are simply ignores)?<br>		(?:…)	incorrect	(?=…)	incorrect	(?!…)	incorrect	(?#…)	correct
MC	Which of the codes shown below results in a match?<br>		re.match('George(?=Washington)', 'George Washington')	incorrect	re.match('George(?=Washington)', 'George')	incorrect	re.match('George(?=Washington)', 'GeorgeWashington')	correct	re.match('George(?=Washington)', 'Georgewashington')	incorrect
MC	What is the output of the code shown below?<br><pre><code data-language="C">import re<br>s = 'abc123 xyz666 lmn-11 def77'<br>re.sub(r'\b([a-z]+)(\d+)', r'\2\1:', s)</code></pre>		'123abc: 666xyz: lmn-11 77def:'	correct	'77def: lmn-11: 666xyz: 123abc'	incorrect	'abc123:', 'xyz666:', 'lmn-11:', 'def77:'	incorrect	'abc123: xyz666: lmn-11: def77'	incorrect
MC	What is the output of the code shown?<br><pre><code data-language="C">re.subn('A', 'X', 'AAAAAA', count=4)</code></pre>		'XXXXAA, 4'	incorrect	('AAAAAA', 4)	incorrect	('XXXXAA', 4)	correct	'AAAAAA, 4'	incorrect